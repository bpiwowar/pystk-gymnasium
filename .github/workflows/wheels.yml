name: Wheels

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
     - master
     - pystk
  # release:
  #   types:
  #     - published

env:
  FORCE_COLOR: 3

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_sdist:
    name: Build SDist
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - name: Build SDist
      run: pipx run build --sdist

    - name: Check metadata
      run: pipx run twine check dist/*

    - uses: actions/upload-artifact@v3
      with:
        path: dist/*.tar.gz


  build_wheels:
    name: Wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    steps:
    - uses: actions/checkout@v4
      with:
        submodules: true

    - uses: awalsh128/cache-apt-pkgs-action@latest
      if: contains(matrix.os, 'ubuntu')
      with:
        packages: build-essential cmake libbluetooth-dev libsdl2-dev libcurl4-openssl-dev libenet-dev libfreetype6-dev libharfbuzz-dev libjpeg-dev libogg-dev libopenal-dev libpng-dev libssl-dev libvorbis-dev libmbedtls-dev pkg-config zlib1g-dev
        version: 1.0

    - uses: pypa/cibuildwheel@v2.16
      env:
        CIBW_ARCHS_MACOS: universal2
        CIBW_ARCHS_WINDOWS: auto ARM64

        # Download dependencies for MacOS
        CIBW_BEFORE_ALL_MACOS: >
          curl  -L  "https://github.com/supertuxkart/dependencies/releases/download/1.4/dependencies-macosx.tar.xz"  | tar -xv
        
        # Download dependencies for windows
        CIBW_BEFORE_ALL_WINDOWS: >
          curl.exe -L -o index.html https://github.com/supertuxkart/dependencies/releases/download/1.4/dependencies-win-x86_64.zip

          tar -xvf dependencies-win-x86_64.zip 

    - name: Verify clean directory
      run: git diff --exit-code
      shell: bash

    - uses: actions/upload-artifact@v3
      with:
        path: wheelhouse/*.whl


  upload_all:
    name: Upload if release
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'

    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: "3.x"

    - uses: actions/download-artifact@v3
      with:
        name: artifact
        path: dist

    - uses: pypa/gh-action-pypi-publish@release/v1
      with:
        password: ${{ secrets.pypi_password }}